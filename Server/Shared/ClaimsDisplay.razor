@using System.Linq
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@if (Claims is null)
{
    <p><em>Claims are loading...</em></p>
}
else
{
    <div class="container-fluid">
        <table class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Type</th>
                    <th>Value</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var claim in Claims)
                {
                    <tr>
                        <td>@claim.Type</td>
                        <td style="word-break:break-all;">@claim.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Inject]
    AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    public List<Claim> Claims { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            Claims = user.Claims.ToList();
        }
    }
}